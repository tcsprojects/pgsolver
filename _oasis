OASISFormat: 0.4
Name:        pgsolver
Version:     4.2
Synopsis:    A collection of tools for generating, manipulating and - most of all - solving parity games.
Description: A collection of tools for generating, manipulating and - most of all - solving parity games.
Authors:     Oliver Friedmann, Martin Lange
Maintainers: Oliver Friedmann, Martin Lange
OCamlVersion: >= 4.03.0
License:     BSD-3-clause
Homepage: https://github.com/tcsprojects/pgsolver
SourceRepository head
  Type: git
  Location: git://github.com/tcsprojects/pgsolver.git
  Browser: https://github.com/tcsprojects/pgsolver
Plugins:     META (0.4)
BuildTools: ocamlbuild
Library "pgsolver"
  Path:       src
  BuildDepends: num, str, TCSLib, extlib, ocaml-sat-solvers, minisat, unix, threads
  Modules: pgsolver/Basics, pgsolver/Info,
           paritygame/Paritygame, paritygame/Verification, paritygame/Univsolve, paritygame/Solvers,
           paritygame/Solverregistry, paritygame/Mdp, paritygame/Paritygamebitset, paritygame/Parsers,
           paritygame/Specialsolve, paritygame/Transformations,
           solvers/Bigstep, solvers/Dominiondecomp, solvers/Externalsolver,
           solvers/Fpiter, solvers/Genetic, solvers/Guessstrategy,
           solvers/Localmodelchecker, solvers/Optstratimprov, solvers/Prioprom, solvers/Priopromdelay,
           solvers/Priopromplus, solvers/Priopromrecovery, solvers/Recursive, solvers/Satsolve, solvers/Smallprogress,
           solvers/Stratimpralgs, solvers/Stratimprdisc, solvers/Stratimprlocal, solvers/Stratimprlocal2,
           solvers/Stratimprovement, solvers/Stratimprsat, solvers/Viasat,
           solvers/stratimpralgs/Switch_cunningham, solvers/stratimpralgs/Switch_globally_best,
           solvers/stratimpralgs/Switch_history, solvers/stratimpralgs/Switch_internal,
           solvers/stratimpralgs/Switch_locally_best, solvers/stratimpralgs/Switch_random,
           solvers/stratimpralgs/Switch_snare, solvers/stratimpralgs/Switch_zadeh,
           solvers/Succinctsmallprogress,
           solvers/Stratimpralgsmulti,
           paritygame/Generatorregistry, paritygame/Generators,
           generators/Randomgame, generators/Laddergame, generators/Clusteredrandomgame, generators/Cliquegame,
           generators/Modelcheckerladder, generators/Recursiveladder, generators/Steadygame, generators/Jurdzinskigame,
           generators/modelchecking/Mucalculus,
           generators/modelchecking/Elevators, generators/modelchecking/Roadworks,
           generators/Towersofhanoi, generators/Langincl,
           generators/Recursivedullgame,
           generators/policyiter/Stratimprgen, generators/policyiter/Stratimprgenerators,
           generators/policyiter/Stratimprgenlist,
           generators/policyiter/generators/Zadehexp, generators/policyiter/generators/Cunninghamexp,
           generators/policyiter/generators/Zadehsubexp, generators/policyiter/generators/Cunninghamsubexp,
           generators/policyiter/generators/Fearnleysubexp, generators/policyiter/generators/Friedmannsubexp,
           generators/policyiter/generators/Switchallsubexp, generators/policyiter/generators/Switchbestsubexp,
           generators/policyiter/generators/Switchallexp, generators/policyiter/generators/Switchbestexp,
           generators/policyiter/generators/Randomfacetsubexp, generators/policyiter/generators/Randomedgesubexp,
           generators/policyiter/generators/Randomedgeexptest
PostBuildCommand: mv pgsolver.native bin/pgsolver ; mv solverstest.* bin/solverstest ; mv auso.* bin/auso ; mv benchmark.* bin/benchmark ; mv benchstratimpr.* bin/benchstratimpr ; mv combine.* bin/combine ; mv complexdecomp.* bin/complexdecomp ; mv compressor.* bin/compressor ; mv fullimprarena.* bin/fullimprarena ; mv imprarena.* bin/imprarena ; mv infotool.* bin/infotool ; mv itersat.* bin/itersat ; mv obfuscator.* bin/obfuscator ; mv policyitervis.* bin/policyitervis ; mv transformer.* bin/transformer ; mv winningstrats.* bin/winningstrats ; mv cliquegame_aux.* bin/cliquegame ; mv clusteredrandomgame_aux.* bin/clusteredrandomgame ; mv jurdzinskigame_aux.* bin/jurdzinskigame ; mv laddergame_aux.* bin/laddergame ; mv langincl_aux.* bin/langincl ; mv modelcheckerladder_aux.* bin/modelcheckerladder ; mv randomgame_aux.* bin/randomgame ; mv recursivedullgame_aux.* bin/recursivedullgame ; mv recursiveladder_aux.* bin/recursiveladder ; mv steadygame_aux.* bin/steadygame ; mv towersofhanoi_aux.* bin/towersofhanoi ; mv elevators_aux.* bin/elevators ; mv roadworks_aux.* bin/roadworks ; mv stratimprgen.* bin/stratimprgen
Executable "pgsolver-bin"
  Path: src/pgsolver
  BuildDepends: pgsolver
  MainIs: pgsolver.ml
  CompiledObject: best
Executable "solverstest-bin"
  Path: tests
  BuildDepends: pgsolver, oUnit
  MainIs: solverstest.ml
  CompiledObject: best
Executable "auso-bin"
  Path: src/tools
  BuildDepends: pgsolver
  MainIs: auso.ml
  CompiledObject: best
Executable "benchmark-bin"
  Path: src/tools
  BuildDepends: pgsolver
  MainIs: benchmark.ml
  CompiledObject: best
Executable "benchstratimpr-bin"
  Path: src/tools
  BuildDepends: pgsolver
  MainIs: benchstratimpr.ml
  CompiledObject: best
Executable "combine-bin"
  Path: src/tools
  BuildDepends: pgsolver
  MainIs: combine.ml
  CompiledObject: best
Executable "complexdecomp-bin"
  Path: src/tools
  BuildDepends: pgsolver
  MainIs: complexdecomp.ml
  CompiledObject: best
Executable "compressor-bin"
  Path: src/tools
  BuildDepends: pgsolver
  MainIs: compressor.ml
  CompiledObject: best
Executable "fullimprarena-bin"
  Path: src/tools
  BuildDepends: pgsolver
  MainIs: fullimprarena.ml
  CompiledObject: best
Executable "imprarena-bin"
  Path: src/tools
  BuildDepends: pgsolver
  MainIs: imprarena.ml
  CompiledObject: best
Executable "infotool-bin"
  Path: src/tools
  BuildDepends: pgsolver
  MainIs: infotool.ml
  CompiledObject: best
Executable "itersat-bin"
  Path: src/tools
  BuildDepends: pgsolver
  MainIs: itersat.ml
  CompiledObject: best
Executable "obfuscator-bin"
  Path: src/tools
  BuildDepends: pgsolver
  MainIs: obfuscator.ml
  CompiledObject: best
Executable "policyitervis-bin"
  Path: src/tools
  BuildDepends: pgsolver
  MainIs: policyitervis.ml
  CompiledObject: best
Executable "transformer-bin"
  Path: src/tools
  BuildDepends: pgsolver
  MainIs: transformer.ml
  CompiledObject: best
Executable "winningstrats-bin"
  Path: src/tools
  BuildDepends: pgsolver
  MainIs: winningstrats.ml
  CompiledObject: best
Executable "cliquegame-bin"
  Path: src/generators
  BuildDepends: pgsolver
  MainIs: cliquegame_aux.ml
  CompiledObject: best
Executable "clusteredrandomgame-bin"
  Path: src/generators
  BuildDepends: pgsolver
  MainIs: clusteredrandomgame_aux.ml
  CompiledObject: best
Executable "jurdzinskigame-bin"
  Path: src/generators
  BuildDepends: pgsolver
  MainIs: jurdzinskigame_aux.ml
  CompiledObject: best
Executable "laddergame-bin"
  Path: src/generators
  BuildDepends: pgsolver
  MainIs: laddergame_aux.ml
  CompiledObject: best
Executable "langincl-bin"
  Path: src/generators
  BuildDepends: pgsolver
  MainIs: langincl_aux.ml
  CompiledObject: best
Executable "modelcheckerladder-bin"
  Path: src/generators
  BuildDepends: pgsolver
  MainIs: modelcheckerladder_aux.ml
  CompiledObject: best
Executable "randomgame-bin"
  Path: src/generators
  BuildDepends: pgsolver
  MainIs: randomgame_aux.ml
  CompiledObject: best
Executable "recursiveladder-bin"
  Path: src/generators
  BuildDepends: pgsolver
  MainIs: recursiveladder_aux.ml
  CompiledObject: best
Executable "recursivedullgame-bin"
  Path: src/generators
  BuildDepends: pgsolver
  MainIs: recursivedullgame_aux.ml
  CompiledObject: best
Executable "steadygame-bin"
  Path: src/generators
  BuildDepends: pgsolver
  MainIs: steadygame_aux.ml
  CompiledObject: best
Executable "towersofhanoi-bin"
  Path: src/generators
  BuildDepends: pgsolver
  MainIs: towersofhanoi_aux.ml
  CompiledObject: best
Executable "elevators-bin"
  Path: src/generators/modelchecking
  BuildDepends: pgsolver
  MainIs: elevators_aux.ml
  CompiledObject: best
Executable "roadworks-bin"
  Path: src/generators/modelchecking
  BuildDepends: pgsolver
  MainIs: roadworks_aux.ml
  CompiledObject: best
Executable "stratimprgen-bin"
  Path: src/generators/policyiter
  BuildDepends: pgsolver
  MainIs: stratimprgen.ml
  CompiledObject: best
